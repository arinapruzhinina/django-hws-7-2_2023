# Generated by Django 4.1.7 on 2023-05-05 19:16

import afisha_app.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='modified')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('address', models.TextField(blank=True, null=True, verbose_name='address')),
                ('age_minimum', models.IntegerField(blank=True, null=True, validators=[afisha_app.models.positive_int], verbose_name='age limit')),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='start time')),
                ('tickets_amount', models.IntegerField(blank=True, null=True, validators=[afisha_app.models.positive_int], verbose_name='ticket amount')),
                ('type', models.CharField(choices=[('concert', 'con—Åert'), ('performance', 'performance')], max_length=40, verbose_name='type')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'db_table': '"afisha"."event"',
            },
        ),
        migrations.CreateModel(
            name='Viewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='modified')),
                ('money', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('surname', models.CharField(max_length=40, verbose_name='surname')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='phone')),
                ('email', models.CharField(blank=True, max_length=64, null=True, verbose_name='email')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'viewer',
                'verbose_name_plural': 'viewers',
                'db_table': '"afisha"."viewer"',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='created')),
                ('modified', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='modified')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='price')),
                ('row', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(11), django.core.validators.MinValueValidator(1)], verbose_name='row')),
                ('seat_num', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(20), django.core.validators.MinValueValidator(1)], verbose_name='seat number')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='afisha_app.event')),
                ('viewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='afisha_app.viewer')),
            ],
            options={
                'verbose_name': 'ticket',
                'verbose_name_plural': 'tickets',
                'db_table': '"afisha"."ticket"',
            },
        ),
        migrations.CreateModel(
            name='ViewerTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='created')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='afisha_app.ticket')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='afisha_app.viewer')),
            ],
            options={
                'db_table': '"afisha"."viewer_ticket"',
                'unique_together': {('viewer', 'ticket')},
            },
        ),
        migrations.CreateModel(
            name='EventTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='created')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='afisha_app.event')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='afisha_app.ticket')),
            ],
            options={
                'db_table': '"afisha"."event_ticket"',
                'unique_together': {('event', 'ticket')},
            },
        ),
    ]
